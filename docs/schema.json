{
  "openapi": "3.0.3",
  "info": {
    "title": "ADAMANT OpenAPI Specification",
    "description": "Schema JSON is located [here](/schema.json).",
    "version": "0.1.0"
  },
  "components": {
    "schemas": {
      "GetAccountInfoResponseDto": {
        "required": [
          "account",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "account": {
            "$ref": "#/components/schemas/AccountDto"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        },
        "example": {
          "account": {
            "address": "U777355171330060015",
            "unconfirmedBalance": "4509718944753",
            "balance": "4509718944753",
            "publicKey": "a9407418dafb3c8aeee28f3263fd55bae0f528a5697a9df0e77e6568b19dfe34",
            "unconfirmedSignature": 0,
            "secondSignature": 0,
            "secondPublicKey": null,
            "multisignatures": [],
            "u_multisignatures": []
          },
          "success": true,
          "nodeTimestamp": 58030181
        }
      },
      "GetAccountBalanceResponseDto": {
        "required": [
          "balance",
          "unconfirmedBalance",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "balance": {
            "type": "string",
            "format": "int64"
          },
          "unconfirmedBalance": {
            "type": "string",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        },
        "example": {
          "balance": "4509718944753",
          "unconfirmedBalance": "4509718944753",
          "success": true,
          "nodeTimestamp": 58043820
        }
      },
      "GetAccountPublicKeyResponseDto": {
        "required": [
          "publicKey",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        },
        "example": {
          "publicKey": "a9407418dafb3c8aeee28f3263fd55bae0f528a5697a9df0e77e6568b19dfe34",
          "balance": "4509718944753",
          "unconfirmedBalance": "4509718944753"
        }
      },
      "CreateNewAccountRequestBody": {
        "required": [
          "publicKey",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        },
        "example": {
          "publicKey": "a9407418dafb3c8aeee28f3263fd55bae0f528a5697a9df0e77e6568b19dfe34",
          "balance": "4509718944753",
          "unconfirmedBalance": "4509718944753"
        }
      },
      "CreateNewAccountResponseDto": {
        "required": [
          "account",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "account": {
            "$ref": "#/components/schemas/AccountDto"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        },
        "example": {
          "account": {
            "address": "U4697606961271319613",
            "unconfirmedBalance": "0",
            "balance": "0",
            "publicKey": "bee368cc0ce2974adcbcc97e649ac18a031492a579034abed5f77d667001d450",
            "unconfirmedSignature": 0,
            "secondSignature": 0,
            "secondPublicKey": null,
            "multisignatures": null,
            "u_multisignatures": null
          },
          "success": true,
          "nodeTimestamp": 63205623
        }
      },
      "GetBlockInfoResponseDto": {
        "required": [
          "block",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "block": {
            "$ref": "#/components/schemas/BlockInfoDto"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        }
      },
      "GetBlocksResponseDto": {
        "required": [
          "blocks",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockInfoDto"
            }
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        }
      },
      "GetChatroomsResponseDto": {
        "required": [
          "chats",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "chats": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "lastTransaction": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenTransferTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/ChatMessageTransaction"
                    }
                  ]
                },
                "participants": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatParticipant"
                  }
                }
              }
            }
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        }
      },
      "GetChatMessagesResponseDto": {
        "required": [
          "messages",
          "participants",
          "count",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TokenTransferTransaction"
                },
                {
                  "$ref": "#/components/schemas/ChatMessageTransaction"
                }
              ]
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatParticipant"
            }
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        }
      },
      "GetChatTransactionsResponseDto": {
        "required": [
          "transactions",
          "count",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessageTransaction"
            }
          },
          "count": {
            "type": "string",
            "description": "Number in string format"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        }
      },
      "CreateNewChatMessageRequestBody": {
        "required": [
          "transaction"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/RegisterChatMessageTransaction"
          }
        }
      },
      "CreateNewChatMessageResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "transactionId"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 63205623,
          "transactionId": "2515012750420367858"
        }
      },
      "GetDelegatesResponseDto": {
        "required": [
          "delegates",
          "totalCount",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "delegates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DelegateDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "example": 254
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "GetDelegateResponseDto": {
        "required": [
          "delegate",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "delegate": {
            "$ref": "#/components/schemas/DelegateDto"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "SearchDelegateResponseDto": {
        "required": [
          "delegates",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "delegates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDelegateDto"
            }
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "GetDelegatesCountResponseDto": {
        "required": [
          "count",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 255
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "integer",
            "example": 61762271
          }
        }
      },
      "GetDelegateStatsResponseDto": {
        "required": [
          "fees",
          "rewards",
          "forged",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "fees": {
            "type": "string",
            "description": "Total sum of fees forged by delegate",
            "example": "586039475511"
          },
          "rewards": {
            "type": "string",
            "description": "Total sum of rewards made by delegate",
            "example": "3943485000000"
          },
          "forged": {
            "type": "string",
            "description": "Total sum of forged tokens",
            "example": "4529524475511"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "GetNextForgersResponseDto": {
        "required": [
          "currentBlock",
          "currentBlockSlot",
          "currentSlot",
          "delegates",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "delegates": {
            "type": "array",
            "description": "Array of next forgers public keys",
            "items": {
              "type": "string"
            },
            "example": [
              "677c6db63548c99674fed0571da522a6a9569d0c1da9669734a3625645519641",
              "150d638714f65845b50f1ff58f3da2c2baa3a1dc8bf59a9884c10da5a8e951c6"
            ]
          },
          "currentSlot": {
            "type": "integer",
            "description": "Current slot number",
            "example": 11610423
          },
          "currentBlock": {
            "type": "integer",
            "description": "Current blockchain height",
            "example": 10146268
          },
          "currentBlockSlot": {
            "type": "integer",
            "description": "Current block slot number",
            "example": 11610422
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "GetVotersResponseDto": {
        "required": [
          "accounts",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoterDto"
            }
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "GetAccountVotesResponseDto": {
        "required": [
          "delegates",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "delegates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DelegateDto"
            },
            "description": "List of delegates account voted for."
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "RegisterVotesRequestBody": {
        "$ref": "#/components/schemas/RegisterVoteForDelegateTransaction"
      },
      "RegisterVotesResponseDto": {
        "required": [
          "transaction",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/RegisterVotesTransactionDto"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 61762271
          }
        }
      },
      "GetPeersResponseDto": {
        "required": [
          "peers",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "peers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeerDto"
            }
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        }
      },
      "GetLoadingStatusResponseDto": {
        "required": [
          "loaded",
          "now",
          "blocksCount",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "loaded": {
            "type": "boolean"
          },
          "now": {
            "type": "integer"
          },
          "blocksCount": {
            "type": "integer"
          },
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          }
        },
        "example": {
          "loaded": true,
          "now": 10144343,
          "blocksCount": 0,
          "success": true,
          "nodeTimestamp": 58052355
        }
      },
      "GetSyncStatusResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "syncing",
          "blocks",
          "height",
          "broadhash",
          "consensus"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "syncing": {
            "type": "boolean"
          },
          "blocks": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "broadhash": {
            "type": "string"
          },
          "consensus": {
            "type": "number"
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58052355,
          "syncing": false,
          "blocks": 0,
          "height": 10146332,
          "broadhash": "09f2f5614cf7209979dc1df2dd92d16aade904dae6c9b68bccaeb234647b3c18",
          "consensus": 94.32
        }
      },
      "GetPingStatusResponseDto": {
        "required": [
          "success"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "example": {
          "success": true
        }
      },
      "GetNodeVersionResponseDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NodeVersion"
          },
          {
            "type": "object",
            "required": [
              "success",
              "nodeTimestamp"
            ],
            "properties": {
              "success": {
                "type": "boolean",
                "example": true
              },
              "nodeTimestamp": {
                "type": "number",
                "example": 58052984
              }
            }
          }
        ]
      },
      "GetBroadhashResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "broadhash"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "broadhash": {
            "type": "string",
            "description": "Broadhash is established as an aggregated rolling hash of the past five blocks present in the database"
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58052355,
          "broadhash": "e1aedd2818679c174e3f6e31891c34f4069927f33f145e1b81fe5d978733e794"
        }
      },
      "GetEpochResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "epoch"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "epoch": {
            "type": "string",
            "description": "Time when blockchain epoch starts. Value `2017-09-02T17:00:00.000Z` is for mainnet."
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58646306,
          "epoch": "2017-09-02T17:00:00.000Z"
        }
      },
      "GetHeightResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "height"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "height": {
            "type": "integer",
            "description": "Current node height."
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58646306,
          "height": 10145318
        }
      },
      "GetTokenTransferFeeResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "fee"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "fee": {
            "type": "integer",
            "description": "Current fee value for `type 0` (token transfer) transactions. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000)."
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58646306,
          "fee": 50000000
        }
      },
      "GetTransactionTypesFeesResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "fees"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 58646306
          },
          "fees": {
            "$ref": "#/components/schemas/TransactionTypesFeesDto"
          }
        }
      },
      "GetNethashResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "nethash"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "nethash": {
            "type": "string",
            "description": "The `nethash` describes e.g. the Mainnet or the Testnet, that the node is connecting to."
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58646306,
          "nethash": "bd330166898377fb28743ceef5e43a5d9d0a3efd9b3451fb7bc53530bb0a6d64"
        }
      },
      "GetMilestoneResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "milestone"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "milestone": {
            "type": "integer",
            "description": "Current slot height, which determines reward a delegate will get for forging a block."
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58646306,
          "milestone": 1
        }
      },
      "GetRewardResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "reward"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "reward": {
            "type": "integer",
            "description": "The reward a delegate will get for forging a block. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000). Depends on the slot height."
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58646306,
          "reward": 45000000
        }
      },
      "GetTokensTotalSupplyResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "supply"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "supply": {
            "type": "integer",
            "description": "Total current supply of ADM tokens in the network. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000). Total supply increases with every new forged block."
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 58646306,
          "supply": 10198038140000000
        }
      },
      "GetNetworkInfoResponseDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NetworkStatus"
          },
          {
            "type": "object",
            "required": [
              "success",
              "nodeTimestamp"
            ],
            "properties": {
              "success": {
                "type": "boolean"
              },
              "nodeTimestamp": {
                "type": "number"
              }
            }
          }
        ]
      },
      "GetNodeStatusResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "network",
          "version",
          "wsClient"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 58052984
          },
          "network": {
            "$ref": "#/components/schemas/NetworkStatus"
          },
          "version": {
            "$ref": "#/components/schemas/NodeVersion"
          },
          "wsClient": {
            "$ref": "#/components/schemas/WsClient"
          }
        }
      },
      "GetKVSResponseDto": {
        "required": [
          "transactions",
          "count",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KVSTransaction"
            }
          },
          "count": {
            "type": "string",
            "example": "1",
            "description": "Integer in string format"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "SetKVSRequestBody": {
        "required": [
          "transaction"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/RegisterKVSTransaction"
          }
        }
      },
      "SetKVSResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "transactionId"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 63410860,
          "transactionId": "3888802408802922744"
        }
      },
      "GetTransactionsResponseDto": {
        "required": [
          "transactions",
          "count",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnyTransaction"
            }
          },
          "count": {
            "type": "string",
            "example": "1",
            "description": "Integer in string format"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "GetTransactionByIdResponseDto": {
        "required": [
          "transaction",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/AnyTransaction"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "GetTransactionsCountResponseDto": {
        "required": [
          "success",
          "nodeTimestamp",
          "confirmed",
          "unconfirmed",
          "queued",
          "multisignature"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "nodeTimestamp": {
            "type": "number"
          },
          "confirmed": {
            "type": "integer"
          },
          "unconfirmed": {
            "type": "integer"
          },
          "queued": {
            "type": "integer"
          },
          "multisignature": {
            "type": "integer"
          }
        },
        "example": {
          "success": true,
          "nodeTimestamp": 59979539,
          "confirmed": 256953,
          "unconfirmed": 44,
          "queued": 4,
          "multisignature": 0
        }
      },
      "GetQueuedTransactionsResponseDto": {
        "required": [
          "transactions",
          "count",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueuedTransaction"
            }
          },
          "count": {
            "type": "string",
            "example": "1",
            "description": "Integer in string format"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "GetQueuedTransactionByIdResponseDto": {
        "required": [
          "transaction",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/QueuedTransaction"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "GetUnconfirmedTransactionsResponseDto": {
        "required": [
          "transactions",
          "count",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueuedTransaction"
            }
          },
          "count": {
            "type": "string",
            "example": "1",
            "description": "Integer in string format"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "GetUnconfirmedTransactionByIdResponseDto": {
        "required": [
          "transaction",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/QueuedTransaction"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "TransferTokenRequestBody": {
        "required": [
          "transaction"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/RegisterTokenTransferTransaction"
          }
        }
      },
      "TransferTokenResponseDto": {
        "required": [
          "transactionId",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "example": "6146865104403680934"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "RegisterTransactionRequestBody": {
        "required": [
          "transaction"
        ],
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/RegisterAnyTransaction"
          }
        }
      },
      "RegisterTransactionResponseDto": {
        "required": [
          "transactionId",
          "success",
          "nodeTimestamp"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "example": "6146865104403680934"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "nodeTimestamp": {
            "type": "number",
            "example": 63647706
          }
        }
      },
      "PublicKey": {
        "type": "string",
        "description": "256 bit public key of ADAMANT address in hex format",
        "example": "ef5e78a3d02e6d82f4ac0c5b8923c1b86185bd17c27c9ac027c20ec62db79a84"
      },
      "AccountDto": {
        "required": [
          "address",
          "unconfirmedBalance",
          "balance",
          "publicKey",
          "unconfirmedSignature",
          "secondSignature",
          "secondPublicKey",
          "multisignatures",
          "u_multisignatures"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "unconfirmedBalance": {
            "type": "string",
            "format": "int64"
          },
          "balance": {
            "type": "string",
            "format": "int64"
          },
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          },
          "unconfirmedSignature": {
            "type": "number"
          },
          "secondSignature": {
            "type": "number"
          },
          "secondPublicKey": {
            "type": "string",
            "nullable": true
          },
          "multisignatures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "u_multisignatures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          }
        }
      },
      "BlockInfoDto": {
        "required": [
          "id",
          "version",
          "timestamp",
          "height",
          "previousBlock",
          "numberOfTransactions",
          "totalAmount",
          "totalFee",
          "reward",
          "payloadLength",
          "payloadHash",
          "generatorId",
          "blockSignature",
          "confirmations",
          "totalForged"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "int64"
          },
          "version": {
            "type": "number"
          },
          "timestamp": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "previousBlock": {
            "type": "string",
            "format": "int64"
          },
          "numberOfTransactions": {
            "type": "number"
          },
          "totalAmount": {
            "type": "number"
          },
          "totalFee": {
            "type": "number"
          },
          "reward": {
            "type": "number"
          },
          "payloadLength": {
            "type": "number"
          },
          "payloadHash": {
            "type": "string"
          },
          "generatorId": {
            "type": "string"
          },
          "blockSignature": {
            "type": "string"
          },
          "confirmations": {
            "type": "number"
          },
          "totalForged": {
            "type": "string",
            "format": "int64"
          }
        },
        "example": {
          "id": "11114690216332606721",
          "version": 0,
          "timestamp": 61741820,
          "height": 10873829,
          "previousBlock": "11483763337863654141",
          "numberOfTransactions": 1,
          "totalAmount": 10000000,
          "totalFee": 50000000,
          "reward": 45000000,
          "payloadLength": 117,
          "payloadHash": "f7c0fa338a3a848119cad999d8035ab3fcb3d274a4555e141ebeb86205e41345",
          "generatorPublicKey": "134a5de88c7da1ec71e75b5250d24168c6c6e3965ff16bd71497bd015d40ea6a",
          "generatorId": "U3238410389688281135",
          "blockSignature": "18607b15417a6b0a56b4c74cacd713ad7a10df16ec3ab45a697fa72b6f811f9213d895b7e0fbca71cf74323d60148d0991668e5368386408f4d841496ed2280d",
          "confirmations": 1093,
          "totalForged": "95000000"
        }
      },
      "BaseTransaction": {
        "required": [
          "id",
          "height",
          "blockId",
          "type",
          "block_timestamp",
          "timestamp",
          "senderPublicKey",
          "senderId",
          "recipientId",
          "recipientPublicKey",
          "amount",
          "fee",
          "signature",
          "signatures",
          "confirmations",
          "asset"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "height": {
            "type": "number"
          },
          "blockId": {
            "type": "string"
          },
          "type": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9,
            "example": 0,
            "description": "Type of transaction. See [Transaction Types](https://github.com/Adamant-im/adamant/wiki/Transaction-Types)."
          },
          "block_timestamp": {
            "type": "number"
          },
          "timestamp": {
            "type": "number"
          },
          "senderPublicKey": {
            "type": "string"
          },
          "senderId": {
            "type": "string"
          },
          "recipientId": {
            "type": "string"
          },
          "recipientPublicKey": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "int64",
            "description": "Amount to transfer, 8 decimal points (100000000 equals to 1 ADM). For non-transfer transactions must be `0`"
          },
          "fee": {
            "type": "number",
            "description": "Fee for operation. Depends on [Transaction Type](https://github.com/Adamant-im/adamant/wiki/Transaction-Types)"
          },
          "signature": {
            "type": "string"
          },
          "signatures": {
            "type": "array",
            "items": {
              "type": "string",
              "example": []
            }
          },
          "confirmations": {
            "type": "number"
          },
          "asset": {
            "type": "object",
            "example": {}
          }
        }
      },
      "TokenTransferAsset": {
        "type": "object",
        "properties": {},
        "example": {},
        "description": "An empty object"
      },
      "TokenTransferTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTransaction"
          },
          {
            "type": "object",
            "required": [
              "asset",
              "type"
            ],
            "properties": {
              "type": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0,
                "example": 0,
                "description": "Always equal to `0`"
              },
              "asset": {
                "$ref": "#/components/schemas/TokenTransferAsset"
              }
            }
          }
        ]
      },
      "ChatMessageAsset": {
        "type": "object",
        "required": [
          "chat"
        ],
        "properties": {
          "chat": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Encrypted message"
              },
              "own_message": {
                "type": "string",
                "description": "Nonce"
              },
              "type": {
                "type": "integer",
                "description": "Type of chat message (1 - Basic Encrypted Message, 2 - Rich Content Message, 3 - Signal Message). See details https://github.com/Adamant-im/adamant/wiki/Message-Types"
              }
            }
          }
        },
        "example": {
          "chat": {
            "message": "748e4e9cffc969dfa4c1d7b9b708cb171c9e",
            "own_message": "96904970891b838c9a3ab1b9a6f31ec194ec94ffaa95d0cd",
            "type": 1
          }
        }
      },
      "ChatMessageTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTransaction"
          },
          {
            "type": "object",
            "required": [
              "asset",
              "type"
            ],
            "properties": {
              "type": {
                "type": "integer",
                "minimum": 8,
                "maximum": 8,
                "example": 8,
                "description": "Always equal to `8`"
              },
              "asset": {
                "$ref": "#/components/schemas/ChatMessageAsset"
              }
            }
          }
        ]
      },
      "AdamantAddress": {
        "type": "string",
        "description": "ADAMANT address",
        "example": "U8916295525136600565"
      },
      "ChatParticipant": {
        "required": [
          "address",
          "publicKey"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AdamantAddress"
          },
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          }
        }
      },
      "RegisterTransactionBase": {
        "required": [
          "type",
          "amount",
          "senderId",
          "senderPublicKey",
          "recipientId",
          "signature",
          "timestamp"
        ],
        "properties": {
          "type": {
            "type": "integer"
          },
          "amount": {
            "type": "integer"
          },
          "senderId": {
            "type": "string"
          },
          "senderPublicKey": {
            "type": "string"
          },
          "recipientId": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          }
        },
        "example": {
          "type": 0,
          "amount": 0,
          "senderId": "U14236667426471084862",
          "senderPublicKey": "8cd9631f9f634a361ea3b85cbd0df882633e39e7d26d7bc615bbcf75e41524ef",
          "recipientId": "U16655734187932477074",
          "signature": "b3982d603be8f0246fa663e9f012bf28b198cd28f82473db1eb4a342d890f7a2a2c1845db8d256bb5bce1e64a9425822a91e10bf960a2e0b55e20b4841e4ae0b",
          "timestamp": 63228852
        }
      },
      "RegisterChatMessageTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterTransactionBase"
          },
          {
            "type": "object",
            "required": [
              "type",
              "asset"
            ],
            "properties": {
              "type": {
                "type": "integer",
                "minimum": 8,
                "maximum": 8,
                "example": 8,
                "description": "Always equal to `8`"
              },
              "asset": {
                "$ref": "#/components/schemas/ChatMessageAsset"
              }
            }
          }
        ]
      },
      "DelegateDto": {
        "required": [
          "username",
          "address",
          "publicKey",
          "vote",
          "votesWeight",
          "producedblocks",
          "missedblocks",
          "rate",
          "rank",
          "approval",
          "productivity"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Unique delegate's nickname"
          },
          "address": {
            "type": "string",
            "description": "Delegate address"
          },
          "publicKey": {
            "type": "string",
            "description": "Delegate Public Key"
          },
          "vote": {
            "type": "string",
            "description": "Vote weight (obsolete, not used)"
          },
          "votesWeight": {
            "type": "string",
            "description": "Vote weight (Fair Delegate System)"
          },
          "producedlocks": {
            "type": "integer",
            "description": "Count of produced blocks"
          },
          "missedblocks": {
            "type": "integer",
            "description": "Count of missed blocks"
          },
          "rate": {
            "type": "integer",
            "description": "Current position in the Delegates List"
          },
          "rank": {
            "type": "integer",
            "description": "Current position in the Delegates List"
          },
          "approval": {
            "type": "number",
            "description": "Share of votes of all votes in the system"
          },
          "productivity": {
            "type": "number",
            "description": "Productivity / Uptime of a delegate. If `0`, delegate is not active now"
          }
        },
        "example": {
          "username": "galaxy",
          "address": "U17457189553820283321",
          "publicKey": "7e26562594685ba12c0bb99ae80692947828afb71962d54634795d78b3ea7023",
          "vote": "248994436803629",
          "votesWeight": "83910064952101",
          "producedblocks": 269879,
          "missedblocks": 567,
          "rate": 10,
          "rank": 10,
          "approval": 0.76,
          "productivity": 99.79
        }
      },
      "SearchDelegateDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DelegateDto"
          },
          {
            "type": "object",
            "required": [
              "voters_cnt",
              "register_timestamp"
            ],
            "properties": {
              "voters_cnt": {
                "type": "integer",
                "description": "Number of accounts who voted for delegate",
                "example": 12
              },
              "register_timestamp": {
                "type": "integer",
                "description": "Epoch timestamp of when delegate was registered",
                "example": 45523238
              }
            }
          }
        ]
      },
      "VoterDto": {
        "required": [
          "username",
          "address",
          "publicKey",
          "balance"
        ],
        "properties": {
          "username": {
            "type": "string",
            "nullable": true,
            "description": "Voter's delegate username. `null` if address is not a delegate."
          },
          "address": {
            "type": "string",
            "description": "Voter's ADAMANT address"
          },
          "publicKey": {
            "type": "string",
            "description": "Voter's ADAMANT public key"
          },
          "balance": {
            "type": "string",
            "description": "ADM balance of voter's ADAMANT wallet. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000)"
          }
        },
        "example": {
          "username": "leg",
          "address": "U12609717384103730908",
          "publicKey": "559418798f67a81b7f893aa8eab1218b9838a6b0bcd2bc8968c6d490ae0d5d77",
          "balance": "506697"
        }
      },
      "VoteForDelegateAsset": {
        "type": "object",
        "required": [
          "added",
          "deleted"
        ],
        "properties": {
          "votes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Delegate public key. Leave as is for Upvote or prefix the public key with minus sign (`-`) for Downvote",
              "example": "-c0c580c3fb89409f32181fef58935f286f0c1bbf61bd727084ed915b3a4bc95b"
            }
          }
        },
        "example": {
          "votes": [
            "-c0c580c3fb89409f32181fef58935f286f0c1bbf61bd727084ed915b3a4bc95b",
            "ac903ab58135cd5f0613a929d876953214d224034b73c33e63bc153d669447f4"
          ]
        }
      },
      "RegisterVoteForDelegateTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterTransactionBase"
          },
          {
            "type": "object",
            "required": [
              "asset",
              "recipientId",
              "type",
              "senderId"
            ],
            "properties": {
              "asset": {
                "$ref": "#/components/schemas/VoteForDelegateAsset"
              },
              "recipientId": {
                "type": "string",
                "description": "ADAMANT address of account who votes. Same as `senderId`",
                "example": "U14236667426471084862"
              },
              "type": {
                "type": "integer",
                "minimum": 3,
                "maximum": 3,
                "example": 3,
                "description": "Should be always equal to `3`"
              },
              "senderId": {
                "type": "string",
                "description": "ADAMANT address of account who votes. Same as `recipientId`",
                "example": "U14236667426471084862"
              }
            }
          }
        ]
      },
      "QueuedTransaction": {
        "required": [
          "recipientId",
          "amount",
          "type",
          "senderId",
          "senderPublicKey",
          "timestmap",
          "signature",
          "id",
          "fee",
          "relays",
          "receivedAt"
        ],
        "properties": {
          "recipientId": {
            "type": "string",
            "example": "U14236667426471084862"
          },
          "amount": {
            "type": "integer",
            "example": 0
          },
          "type": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9,
            "example": 3,
            "description": "See [Transaction Types](https://github.com/Adamant-im/adamant/wiki/Transaction-Types)"
          },
          "senderId": {
            "type": "string",
            "example": "U14236667426471084862"
          },
          "senderPublicKey": {
            "type": "string",
            "example": "8cd9631f9f634a361ea3b85cbd0df882633e39e7d26d7bc615bbcf75e41524ef"
          },
          "timestamp": {
            "type": "integer",
            "example": 63394407
          },
          "signature": {
            "type": "string",
            "example": "7f4f5d240fc66da1cbdb3fe291d6fcec006848236355aebe346fcd1e3ba500caeac1ed0af6f3d7f912a889a1bbedc1d7bab17b6ebd36386b81df78189ddf7c07"
          },
          "id": {
            "type": "string",
            "example": "13616514419605573351"
          },
          "fee": {
            "type": "integer",
            "example": 5000000000
          },
          "relays": {
            "type": "integer",
            "example": 1
          },
          "receivedAt": {
            "type": "string",
            "description": "Date and time in ISO 8601 format",
            "example": "2019-09-06T10:33:28.054Z"
          }
        }
      },
      "RegisterVotesTransactionDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuedTransaction"
          },
          {
            "type": "object",
            "required": [
              "asset",
              "type",
              "success",
              "nodeTimestamp"
            ],
            "properties": {
              "asset": {
                "$ref": "#/components/schemas/VoteForDelegateAsset"
              },
              "type": {
                "type": "integer",
                "minimum": 3,
                "maximum": 3,
                "example": 3,
                "description": "Always equal to `3`"
              },
              "success": {
                "type": "boolean",
                "example": true
              },
              "nodeTimestamp": {
                "type": "number",
                "example": 61762271
              }
            }
          }
        ]
      },
      "PeerDto": {
        "required": [
          "ip",
          "port",
          "state",
          "os",
          "version",
          "broadhash",
          "height",
          "clock",
          "updated",
          "nonce"
        ],
        "properties": {
          "ip": {
            "type": "string",
            "description": "IPv4 address of node"
          },
          "port": {
            "type": "string",
            "description": "Port number of ADAMANT node. `36666` for mainnet or `36667` for testnet"
          },
          "state": {
            "type": "integer",
            "description": "State of the peer. Available values: Connected (2), Disconnected, Banned"
          },
          "os": {
            "type": "string",
            "description": "Node's operating system"
          },
          "version": {
            "type": "string",
            "description": "ADAMANT node software version"
          },
          "broadhash": {
            "type": "string",
            "description": "Broadhash on the peer node. Broadhash is established as an aggregated rolling hash of the past five blocks present in the database."
          },
          "height": {
            "type": "integer",
            "description": "Current node's blockchain height"
          },
          "clock": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "integer",
            "description": "Unix timestamp based in ms, when peer updated"
          },
          "nonce": {
            "type": "string",
            "description": "Unique Identifier for the peer. Random string."
          }
        },
        "example": {
          "ip": "194.32.79.175",
          "port": 36666,
          "state": 2,
          "os": "linux4.15.0-36-generic",
          "version": "0.4.0",
          "broadhash": "3dfdf6c7bbaf7537eac9c70432f7ba1cae835b9b15e4ecd97e147616dde67e62",
          "height": 10146365,
          "clock": null,
          "updated": 1562424199553,
          "nonce": "jxXV6g0sHJhmDubq"
        }
      },
      "NodeVersion": {
        "required": [
          "build",
          "commit",
          "version"
        ],
        "properties": {
          "build": {
            "type": "string"
          },
          "commit": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "example": {
          "build": "",
          "commit": "b07aaf9580dffb5cc95cc65f303f6f1e5fca7d9c",
          "version": "0.5.2"
        }
      },
      "TransactionTypesFeesDto": {
        "required": [
          "send",
          "vote",
          "delegate",
          "old_chat_message",
          "chat_message",
          "state_store",
          "profile_update",
          "avatar_upload"
        ],
        "properties": {
          "send": {
            "type": "integer",
            "description": "Token transfer, type 0"
          },
          "vote": {
            "type": "integer",
            "description": "Voting for delegate, type 3"
          },
          "delegate": {
            "type": "integer",
            "description": "Registration of a new delegate, type 2"
          },
          "old_chat_message": {
            "type": "integer",
            "description": "Sending a message (not used for now)"
          },
          "chat_message": {
            "type": "integer",
            "description": "Sending a message, type 8"
          },
          "state_store": {
            "type": "integer",
            "description": "Storing data in KVS, type 9"
          },
          "profile_update": {
            "type": "integer"
          },
          "avatar_upload": {
            "type": "integer"
          }
        },
        "example": {
          "send": 50000000,
          "vote": 5000000000,
          "delegate": 300000000000,
          "old_chat_message": 500000,
          "chat_message": 100000,
          "state_store": 100000,
          "profile_update": 5000000,
          "avatar_upload": 10000000
        }
      },
      "NetworkStatus": {
        "required": [
          "broadhash",
          "epoch",
          "height",
          "fee",
          "milestone",
          "nethash",
          "reward",
          "supply"
        ],
        "properties": {
          "broadhash": {
            "type": "string",
            "description": "Broadhash is established as an aggregated rolling hash of the past five blocks present in the database"
          },
          "epoch": {
            "type": "string",
            "description": "Time when blockchain epoch starts. Value `2017-09-02T17:00:00.000Z` is for mainnet."
          },
          "height": {
            "type": "integer"
          },
          "fee": {
            "type": "integer"
          },
          "milestone": {
            "type": "integer",
            "description": "Current slot height, which determines reward a delegate will get for forging a block."
          },
          "nethash": {
            "type": "string",
            "description": "The `nethash` describes e.g. the Mainnet or the Testnet, that the node is connecting to."
          },
          "reward": {
            "type": "integer",
            "description": "The reward a delegate will get for forging a block. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000)."
          },
          "supply": {
            "type": "integer",
            "description": "Total current supply of ADM tokens in the network. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000)."
          }
        },
        "example": {
          "broadhash": "4a28272c915f74d118120bb47db547a18a7512e1d48092c48be86939a6d45b89",
          "epoch": "2017-09-02T17:00:00.000Z",
          "height": 10145334,
          "fee": 50000000,
          "milestone": 1,
          "nethash": "bd330166898377fb28743ceef5e43a5d9d0a3efd9b3451fb7bc53530bb0a6d64",
          "reward": 45000000,
          "supply": 10198040075000000
        }
      },
      "WsClient": {
        "required": [
          "enabled",
          "port"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "port": {
            "type": "integer"
          }
        },
        "example": {
          "enabled": true,
          "port": 36668
        }
      },
      "KVSTransactionAsset": {
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "type": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0
              }
            }
          }
        },
        "example": {
          "state": {
            "key": "eth:address",
            "value": 2.030690772216583e+47,
            "type": 0
          }
        }
      },
      "KVSTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTransaction"
          },
          {
            "type": "object",
            "required": [
              "asset",
              "type"
            ],
            "properties": {
              "type": {
                "type": "integer",
                "minimum": 9,
                "maximum": 9,
                "example": 9,
                "description": "Always equal to `9`"
              },
              "asset": {
                "$ref": "#/components/schemas/KVSTransactionAsset"
              }
            }
          }
        ]
      },
      "RegisterKVSTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterTransactionBase"
          },
          {
            "type": "object",
            "required": [
              "type",
              "asset"
            ],
            "properties": {
              "type": {
                "type": "integer",
                "minimum": 9,
                "maximum": 9,
                "example": 9,
                "description": "Should be always equal to `9` (Store in KVS transaction type)"
              },
              "asset": {
                "$ref": "#/components/schemas/KVSTransactionAsset"
              }
            }
          }
        ]
      },
      "RegisterDelegateAsset": {
        "type": "object",
        "required": [
          "username",
          "publicKey",
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AdamantAddress"
          },
          "username": {
            "type": "string"
          },
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          }
        },
        "example": {
          "address": "U1234567",
          "username": "jowi",
          "publicKey": "6b99151b0e79146a40ab7f6f065e9e2f354fe1e64af8bc35bfa7f5fa5f510ee3"
        }
      },
      "RegisterDelegateTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTransaction"
          },
          {
            "type": "object",
            "required": [
              "type",
              "asset"
            ],
            "properties": {
              "type": {
                "type": "integer",
                "minimum": 2,
                "maximum": 2,
                "example": 2,
                "description": "Always equal to `2`"
              },
              "asset": {
                "$ref": "#/components/schemas/RegisterDelegateAsset"
              }
            }
          }
        ]
      },
      "VoteForDelegateTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTransaction"
          },
          {
            "type": "object",
            "required": [
              "votes",
              "asset",
              "type"
            ],
            "properties": {
              "votes": {
                "type": "object",
                "properties": {
                  "added": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Delegate public key",
                      "example": "c0c580c3fb89409f32181fef58935f286f0c1bbf61bd727084ed915b3a4bc95b"
                    },
                    "description": "List of Upvoted delegates"
                  },
                  "deleted": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Delegate public key",
                      "example": "c0c580c3fb89409f32181fef58935f286f0c1bbf61bd727084ed915b3a4bc95b"
                    },
                    "description": "List of Downvoted delegates"
                  }
                }
              },
              "type": {
                "type": "integer",
                "minimum": 3,
                "maximum": 3,
                "example": 3,
                "description": "Always equal to `3`"
              },
              "asset": {
                "$ref": "#/components/schemas/VoteForDelegateAsset"
              }
            }
          }
        ]
      },
      "AnyTransaction": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TokenTransferTransaction"
          },
          {
            "$ref": "#/components/schemas/RegisterDelegateTransaction"
          },
          {
            "$ref": "#/components/schemas/VoteForDelegateTransaction"
          },
          {
            "$ref": "#/components/schemas/ChatMessageTransaction"
          },
          {
            "$ref": "#/components/schemas/KVSTransaction"
          }
        ]
      },
      "RegisterTokenTransferTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterTransactionBase"
          },
          {
            "type": "object",
            "required": [
              "type",
              "amount"
            ],
            "properties": {
              "type": {
                "type": "integer",
                "description": "Can be `type 0 — Token transfer` or `type 8 — Chat/Message`."
              },
              "amount": {
                "type": "integer",
                "description": "Amount of token to transfer"
              }
            },
            "example": {
              "type": 0,
              "amount": 100000000,
              "senderId": "U14236667426471084862",
              "senderPublicKey": "8cd9631f9f634a361ea3b85cbd0df882633e39e7d26d7bc615bbcf75e41524ef",
              "recipientId": "U16655734187932477074",
              "timestamp": 63228852,
              "signature": "b3982d603be8f0246fa663e9f012bf28b198cd28f82473db1eb4a342d890f7a2a2c1845db8d256bb5bce1e64a9425822a91e10bf960a2e0b55e20b4841e4ae0b"
            }
          }
        ]
      },
      "RegisterAnyTransaction": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/RegisterVoteForDelegateTransaction"
          },
          {
            "$ref": "#/components/schemas/RegisterTokenTransferTransaction"
          },
          {
            "$ref": "#/components/schemas/RegisterKVSTransaction"
          },
          {
            "$ref": "#/components/schemas/RegisterChatMessageTransaction"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "Endpoints intended to interact with ADAMANT accounts",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Adamant-im/adamant/wiki/API-Specification#Account-1"
      }
    },
    {
      "name": "Blocks",
      "description": "List of endpoints giving information of blocks in ADAMANT blockchain",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Adamant-im/adamant/wiki/API-Specification#Blocks-1"
      }
    },
    {
      "name": "Chats",
      "description": "List of endpoints intended to work with chats and chatrooms in ADAMANT blockchain",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Adamant-im/adamant/wiki/API-Specification#Chats-and-Chatrooms-1"
      }
    },
    {
      "name": "Delegates and Voting",
      "description": "Endpoints useful in working with delegate system of ADAMANT blockchain",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Adamant-im/adamant/wiki/API-Specification#Delegates-and-voting-1"
      }
    },
    {
      "name": "Nodes and Blockchain",
      "description": "List of endpoints useful in work with ADAMANT blockchain in general",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Adamant-im/adamant/wiki/API-Specification#Nodes-and-Blockchain-1"
      }
    },
    {
      "name": "KVS",
      "description": "Endpoints intended to store data in ADAMANT Key-Value Storage (KVS)",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Adamant-im/adamant/wiki/API-Specification#states-key-value-storage-kvs-1"
      }
    },
    {
      "name": "Transactions",
      "description": "Contains endpoints useful to interact with transactions of ADAMANT blockchain",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Adamant-im/adamant/wiki/API-Specification#Transactions-1"
      }
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Get account information by ADAMANT address or by Public Key",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "publicKey",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Account information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountInfoResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/getBalance": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Get account balance",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account balance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountBalanceResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/getPublicKey": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Get account Public Key",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account Public Key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountPublicKeyResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/new": {
      "post": {
        "tags": [
          "Account"
        ],
        "description": "Create new account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewAccountRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewAccountResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/get": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "description": "Get block information by ID",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How much blocks to get, integer. Default is `100`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Height offset value for results. Default is `0`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Block information",
            "content": {
              "applicaton/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBlockInfoResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/blocks": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "description": "Get list of blocks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How much blocks to get, integer. Default is `100`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Height offset value for results. Default is `0`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "generatorPublicKey",
            "in": "query",
            "description": "Delegate's public key of ADAMANT address who generated the block",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Get block of specific node's height",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lisk of blocks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBlocksResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/chatrooms/{address}": {
      "get": {
        "tags": [
          "Chats"
        ],
        "description": "Get list of Chats",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "ADAMANT address",
            "required": true,
            "schema": {
              "type": "string",
              "example": "U839357947177758191"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat rooms",
            "content": {
              "applicaton/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChatroomsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/chatrooms/{ownAddress}/{partnerAddress}": {
      "get": {
        "tags": [
          "Chats"
        ],
        "description": "Get messages between two accounts",
        "parameters": [
          {
            "name": "ownAddress",
            "in": "path",
            "description": "Your ADAMANT address",
            "required": true,
            "schema": {
              "type": "string",
              "example": "U8916295525136600565"
            }
          },
          {
            "name": "partnerAddress",
            "in": "path",
            "description": "Partner ADAMANT address",
            "required": true,
            "schema": {
              "type": "string",
              "example": "U2707535059340134112"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of messages",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat messages",
            "content": {
              "applicaton/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChatMessagesResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/chats/get": {
      "get": {
        "tags": [
          "Chats"
        ],
        "description": "Returns list of transactions with `type = 8` (deprecated, use `/chatrooms` instead)",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "ADAMANT address",
            "required": true,
            "schema": {
              "type": "string",
              "example": "U839357947177758191"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by field",
            "required": false,
            "schema": {
              "type": "string",
              "example": "timestamp:desc"
            }
          },
          {
            "name": "fromHeight",
            "in": "query",
            "description": "Filter transactions starting from specified block `height`",
            "required": false,
            "schema": {
              "type": "number",
              "example": 6184187
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChatTransactionsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/chats/process": {
      "post": {
        "tags": [
          "Chats"
        ],
        "description": "Broadcast transactions of `type 8 — Сhat/Message`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewChatMessageRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewChatMessageResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/delegates": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Retrieves list of registered ADAMANT delegates",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of delegates to retrieve, integer. Default is `101` (active delegates).",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 101
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Height offset value for results. Default is `0`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of delegates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegatesResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/delegates/get": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Get delegate info by `username` or `publicKey`",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "lynx"
            }
          },
          {
            "name": "publicKey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ef5e78a3d02e6d82f4ac0c5b8923c1b86185bd17c27c9ac027c20ec62db79a84"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delegate info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/delegates/search": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Search delegates by `username`",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Partial or full username of a delegate",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delegate info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDelegateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/delegates/count": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Get total count of delegates",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegatesCountResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/delegates/forging/getForgedByAccount": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Get forging activity of a delegate",
        "parameters": [
          {
            "name": "generatorPublicKey",
            "in": "query",
            "description": "Delegate's publicKey",
            "schema": {
              "type": "string",
              "example": "a9407418dafb3c8aeee28f3263fd55bae0f528a5697a9df0e77e6568b19dfe34"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegateStatsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/delegates/getNextForgers": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Returns list of next forgers",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNextForgersResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/delegates/voters": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Get list of delegate's voters",
        "parameters": [
          {
            "name": "publicKey",
            "in": "query",
            "description": "Delegate's ADAMANT public key",
            "schema": {
              "type": "string",
              "example": "a9407418dafb3c8aeee28f3263fd55bae0f528a5697a9df0e77e6568b19dfe34"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVotersResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/delegates": {
      "get": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Current votes of specific ADAMANT account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "U777355171330060015"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountVotesResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Delegates and Voting"
        ],
        "description": "Vote for delegates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterVoteForDelegateTransaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterVotesResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/peers": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Get list of connected peer nodes",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of nodes. Default is `100`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Height offset value for results. Default is `0`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "os",
            "in": "query",
            "description": "Filter results by Operating System",
            "required": false,
            "schema": {
              "type": "string",
              "example": "linux4.15.0-36-generic"
            }
          },
          {
            "name": "ip",
            "in": "query",
            "description": "Filter results by IP",
            "required": false,
            "schema": {
              "type": "string",
              "example": "194.32.79.175"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPeersResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/loader/status": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns information of node's loading process",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLoadingStatusResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/loader/status/sync": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns information of the node sync process with other peers",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSyncStatusResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/loader/status/ping": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Get ping status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPingStatusResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/peers/version": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns node software information",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodeVersionResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getBroadhash": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Broadhash is established as an aggregated rolling hash of the past five blocks present in the database.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBroadhashResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getEpoch": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns time when blockchain epoch starts. Value `2017-09-02T17:00:00.000Z` is for mainnet.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEpochResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getHeight": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns current node's blockchain height",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHeightResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getFee": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns current fee value for `type 0` (token transfer) transactions. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000).",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokenTransferFeeResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getFees": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns current fee values for different transaction types",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionTypesFeesResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getNethash": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "The nethash describes e.g. the Mainnet or the Testnet, that the node is connecting to.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNethashResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getMilestone": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Return current slot height, which determines reward a delegate will get for forging a block.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMilestoneResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getReward": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns reward — the reward a delegate will get for forging a block. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000). Depends on the slot height.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRewardResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getSupply": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns total current supply of ADM tokens in network. Integer amount of 1/10^8 ADM tokens (1 ADM = 100000000). Total supply increases with every new forged block.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokensTotalSupplyResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/blocks/getStatus": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns blockchain network information in a single request",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkInfoResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/node/status": {
      "get": {
        "tags": [
          "Nodes and Blockchain"
        ],
        "description": "Returns both ADAMANT blockchain network information and Node information in a single request.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodeStatusResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/states/get": {
      "get": {
        "tags": [
          "KVS"
        ],
        "description": "Fetch data from KVS. As a result you'll get a list of transactions of `type = 9` with KVS data, stored in `asset.state` field.",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "eth:address"
            }
          },
          {
            "name": "keyIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "eth:address",
                "doge:address",
                "dash:address",
                "btc:address"
              ],
              "description": "Array of keys, comma-separated in string format"
            }
          },
          {
            "name": "senderId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "U14236667426471084862"
            }
          },
          {
            "name": "senderIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "U3461022864428928223",
                "U17790659840463725618",
                "U43512412354440829"
              ],
              "description": "Array of ADAMANT addresses, comma-separated in string format"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "timestamp:desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKVSResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "KVS"
        ],
        "description": "Creates a KVS transaction (`type 9`)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetKVSRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetKVSResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Returns list of transactions",
        "parameters": [
          {
            "name": "minAmount",
            "in": "query",
            "description": "Filter results by min `amount` property",
            "schema": {
              "type": "integer",
              "example": 100000000000001
            },
            "required": false
          },
          {
            "name": "fromHeight",
            "in": "query",
            "description": "Filter results starting from specific `height`",
            "schema": {
              "type": "integer",
              "example": 7585271
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of transactions in the result",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "description": "Broadcast [any type](https://github.com/Adamant-im/adamant/wiki/Transaction-Types) of transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTransactionRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTransactionResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/get": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Get transaction by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "12154642911137703318"
            },
            "required": false
          },
          {
            "name": "returnAsset",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionByIdResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/count": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Get `confirmed`, `uncofirmed` and `queued` transactions count",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsCountResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/queued": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Get queued transactions count",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQueuedTransactionsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/queued/get": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Get queued transaction by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "12154642911137703318"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQueuedTransactionsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/unconfirmed": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Get unconfirmed transactions",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnconfirmedTransactionsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/unconfirmed/get": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Get unconfirmed transaction by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "12154642911137703318"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnconfirmedTransactionByIdResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/process": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "description": "Broadcast transactions of `type 0 — Token transfer` or `type 8 — Chat/Message`. See [Transaction Types](https://github.com/Adamant-im/adamant/wiki/Transaction-Types)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferTokenRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferTokenResponseDto"
                }
              }
            }
          }
        }
      }
    }
  }
}
